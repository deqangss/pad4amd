# -*- coding: utf-8 -*-
"""
***
This tool has been extended to use in EvadeDroid. The original operation of 
the tool was extracting n-grams from APK; however, it has been extended 
for use in the EvadeDroid's pipeline by adding various functionalities.
***

Created on Fri Feb  9 13:26:50 2018

@author: 燃烧杯
词集模型

https://github.com/DQinYuan/AndroidMalwareWithN-gram
"""

import os
import subprocess
from core.attack.evadedroid.settings import config as evadedroid_config


def disassemble(frompath, topath, num, start=0):
    files = frompath  # os.listdir(frompath)
    files = files[start:num]
    total = len(files)
    for i, file in enumerate(files):
        fullFrompath = file  # os.path.join(frompath, file)
        fullTopath = os.path.join(topath, os.path.basename(file))
        if os.path.exists(fullTopath) == False:
            command = "java -jar " + evadedroid_config[
                'project_root'] + "/android_malware_with_n_gram/apktool.jar d " + fullFrompath + " -o " + fullTopath
            res = subprocess.call(command, shell=True)
            print("res:", res)
        print("Disassembled", i, "Applications, the percentages are as follows：")
        print((i + 1) * 100 / total, "%")


def disassemble_adv(post_op_host, topath, num, start=0):
    file = post_op_host
    fullFrompath = file
    fullTopath = os.path.join(topath, os.path.basename(file))
    command = "java -jar " + evadedroid_config[
        'project_root'] + "/android_malware_with_n_gram/apktool.jar d " + fullFrompath + " -f -o " + fullTopath
    res = subprocess.call(command, shell=True)
    return res, fullTopath
