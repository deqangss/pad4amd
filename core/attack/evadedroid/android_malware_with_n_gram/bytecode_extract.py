# -*- coding: utf-8 -*-
"""
***
This tool has been extended to use in EvadeDroid. The original operation of 
the tool was extracting n-grams from APK; however, it has been extended 
for use in the EvadeDroid's pipeline by adding various functionalities.
***

Created on Fri Feb  9 13:26:50 2018

@author: 燃烧杯
词集模型

https://github.com/DQinYuan/AndroidMalwareWithN-gram
"""

import shutil
from core.attack.evadedroid.android_malware_with_n_gram.infrastructure.ware import Ware
from core.attack.evadedroid.android_malware_with_n_gram.infrastructure.fileutils import DataFile

virusroot = "./smalis/malware"
kindroot = "./smalis/kind"

import os
from core.attack.evadedroid.settings import config as evadedroid_config

def collect(rootdir, isMalware):
    f = DataFile(evadedroid_config['project_root'] + "/android_malware_with_n_gram/data.csv")
    wares = os.listdir(rootdir)
    total = len(wares)
    for i, ware in enumerate(wares):       
        warePath = os.path.join(rootdir, ware)
        ware = Ware(warePath, isMalware)
        ware.extractFeature(f)
        print("Extracted", i + 1, "The characteristics of each file, the percentages are as follows：")
        print((i + 1) * 100 / total, "%")    
    f.close()
    #shutil.rmtree(rootdir)

def collect_adv(rootdir, isMalware, post_op_host):
    f = DataFile(evadedroid_config['project_root'] + "/android_malware_with_n_gram/data_%s.csv"%(os.path.basename(post_op_host).replace('.apk','')))
    warePath = rootdir
    ware = Ware(warePath, 1)
    ware.extractFeature(f)   
    shutil.rmtree(rootdir)    
        
if __name__ == "__main__":
    #Represents malware
    collect(virusroot, 1)
    collect(kindroot, 0)    


        




